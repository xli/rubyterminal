

!start Terminal with '.terminal.running' file created
!remove '.terminal.running' when Terminal shutdown
!fork and run command
!output output of forked process into '.terminal.output'

!detect Terminal running in directory or parent directory
!write Terminal command file(full path) and read the output to output
!shutdown process when the '.terminal.input' file is gone
!give a warning when start rt without ruby environment script
!a command line execution solution: ert test/unit/xx_test.rb
!time out? how terminal protects itself with dead execution?
!show launching time: we could more easy to know how much time saved
!use 'rt --rails' to start at rails project root directory, detect config/environment
!rails will load all class in it's initializer in environment, do something for it
!when there is no RubyTerminal found by ert, output something
!fix exit problem in 1.8.7 for test::unit
!use RubyTerminal.options instead of const and global variable: RELOAD_PATHS and rails_test_option_is_on

run RubyTerminal in debug mode, so that we could have some output for debuging problems
allow user to input in terminal?
how about command has "\\n"
how to integrate with rake? needed?
